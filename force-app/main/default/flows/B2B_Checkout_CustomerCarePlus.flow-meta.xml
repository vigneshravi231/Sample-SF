<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>51.0</apiVersion>
    <assignments>
        <description>The loop node is here for cosmetic purposes. It helps make the flow easier to read, but is not a necessary technical component.</description>
        <name>Loop</name>
        <label>Loop</label>
        <locationX>1450</locationX>
        <locationY>494</locationY>
        <assignmentItems>
            <assignToReference>cartId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>B2B_Refetch_Session</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>The Debug Screen Decision node determines whether to show the debug screen. The default is no.</description>
        <name>Debug_Screen_Decision</name>
        <label>Show Debug Screen?</label>
        <locationX>579</locationX>
        <locationY>169</locationY>
        <defaultConnector>
            <targetReference>Main_Decision_Hub</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Debug_Screen_Outcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>debug</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Debug_Screen</targetReference>
            </connector>
            <label>Debug Screen Outcome</label>
        </rules>
    </decisions>
    <decisions>
        <description>The Main Decision Hub is the primary driver of the checkout flow.

It uses the following logic:
 - If mainCheckoutSession.IsProcessing = True, go to the wait screen.
 - Otherwise, for each session.state, go to the corresponding subflow.
 
Note: The nextState is passed into the subflow and the nextState value is set to mainCheckoutSession.state when: 
 - An asynchronous invocable action completes in an asynchronous subflow.
 - Or the Save Session node produces the nextState value for a synchronous subflow, and assigns it to the nextState variable in the main flow. 

Asynchronous invocable actions set mainCheckoutSession.isProcess = True.</description>
        <name>Main_Decision_Hub</name>
        <label>Main Decision Hub</label>
        <locationX>772</locationX>
        <locationY>358</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Error_Outcome</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>mainCheckoutSession.IsError</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>B2B_Checkout_Error</targetReference>
            </connector>
            <label>Error</label>
        </rules>
        <rules>
            <name>Waiting_Outcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>mainCheckoutSession.IsProcessing</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Wait_Debug_Decision</targetReference>
            </connector>
            <label>Waiting</label>
        </rules>
        <rules>
            <name>Get_Cart_Info</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>mainCheckoutSession.State</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Start</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>hasCartInfo</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Checkout_Info</targetReference>
            </connector>
            <label>Get Cart Info</label>
        </rules>
        <rules>
            <name>One_Step_Checkout</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>mainCheckoutSession.IsProcessing</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>mainCheckoutSession.State</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>One Step Checkout</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>hasCartInfo</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Checkout</targetReference>
            </connector>
            <label>One Step Checkout</label>
        </rules>
    </decisions>
    <decisions>
        <description>The Wait Debug Decision node determines whether to show the debug screen. The default is no.</description>
        <name>Wait_Debug_Decision</name>
        <label>Show Wait Debug?</label>
        <locationX>982</locationX>
        <locationY>270</locationY>
        <defaultConnector>
            <targetReference>Wait_Screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Wait_Debug_Outcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>debug</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Wait_Debug_Screen</targetReference>
            </connector>
            <label>Wait Debug Outcome</label>
        </rules>
    </decisions>
    <interviewLabel>B2B_Checkout_CustomerCarePlus {!$Flow.CurrentDateTime}</interviewLabel>
    <label>B2B Checkout CustomerCarePlus</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>CheckoutFlow</processType>
    <runInMode>SystemModeWithSharing</runInMode>
    <screens>
        <name>Checkout</name>
        <label>Checkout</label>
        <locationX>800</locationX>
        <locationY>670</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Loop</targetReference>
        </connector>
        <fields>
            <name>Checkout_Component</name>
            <extensionName>c:customerCareCheckout</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>addresses</name>
                <value>
                    <elementReference>contactPointAddresses</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>buyerAccount</name>
                <value>
                    <elementReference>buyerAccount</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>cart</name>
                <value>
                    <elementReference>cart</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>contact</name>
                <value>
                    <elementReference>contact</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>orderDeliveryMethods</name>
                <value>
                    <elementReference>orderDeliveryMethods</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>paymentTerms</name>
                <value>
                    <elementReference>paymentTerm</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>cart.Id</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Debug_Screen</name>
        <label>Debug</label>
        <locationX>586</locationX>
        <locationY>307</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Main_Decision_Hub</targetReference>
        </connector>
        <fields>
            <name>CheckoutSessionIdText</name>
            <fieldText>&lt;p&gt;Session Id: {!mainCheckoutSession.Id}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>currentstate</name>
            <fieldText>&lt;p&gt;State: {!mainCheckoutSession.State}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>sessionNextState</name>
            <fieldText>&lt;p&gt;Next State: {!mainCheckoutSession.NextState}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>jobIdDisplaydsaf</name>
            <fieldText>&lt;p&gt;JobId: {!mainCheckoutSession.Id}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>locked</name>
            <fieldText>&lt;p&gt;Locked? {!mainCheckoutSession.IsProcessing}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>order</name>
            <fieldText>&lt;p&gt;Order: {!mainCheckoutSession.OrderId}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>shouldCloseCartBool</name>
            <fieldText>&lt;p&gt;Should Close Cart? {!shouldCloseCart}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>The Wait Debug Screen node displays a version of the wait screen with debug information.</description>
        <name>Wait_Debug_Screen</name>
        <label>Wait Debug</label>
        <locationX>1247</locationX>
        <locationY>323</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>B2B_Refetch_Session</targetReference>
        </connector>
        <fields>
            <name>WaitingLabel</name>
            <fieldText>&lt;p&gt;Waiting Screen ( replace with a subflow at some point )&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>lockDisplay</name>
            <fieldText>&lt;p&gt;Locked: {!mainCheckoutSession.IsProcessing}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>stateDisplay</name>
            <fieldText>&lt;p&gt;State: {!mainCheckoutSession.State}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>sessionNextState2</name>
            <fieldText>&lt;p&gt;Next State: {!mainCheckoutSession.NextState}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>jobIdDislpay</name>
            <fieldText>&lt;p&gt;Job: {!mainCheckoutSession.Id}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>commerceScreenWait</name>
            <extensionName>forceCommunity:commerceScreenWait</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>cartCheckoutSessionId</name>
                <value>
                    <elementReference>mainCheckoutSession.Id</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>mainCheckoutSession.Id</assignToReference>
                <name>cartCheckoutSessionId</name>
            </outputParameters>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>The Wait Screen node displays when session.isProcessing = true

Async subflows set session.isProcessing = true before calling async invocable actions.

When async invocable actions complete, they change session.isProcessing to false and set session.state to session.nextState, not the flow variable nextState.</description>
        <name>Wait_Screen</name>
        <label>Wait</label>
        <locationX>1247</locationX>
        <locationY>205</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>B2B_Refetch_Session</targetReference>
        </connector>
        <fields>
            <name>commerceScreenWait_0</name>
            <extensionName>forceCommunity:commerceScreenWait</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>cartCheckoutSessionId</name>
                <value>
                    <elementReference>mainCheckoutSession.Id</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>mainCheckoutSession.Id</assignToReference>
                <name>cartCheckoutSessionId</name>
            </outputParameters>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>334</locationX>
        <locationY>21</locationY>
        <connector>
            <targetReference>B2B_Get_Or_Create_Session</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>B2B_Checkout_Error</name>
        <label>B2B Checkout Error</label>
        <locationX>529</locationX>
        <locationY>456</locationY>
        <flowName>B2B_Checkout_Error</flowName>
        <inputAssignments>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>B2B_Get_Or_Create_Session</name>
        <label>B2B Get Or Create Session</label>
        <locationX>460</locationX>
        <locationY>167</locationY>
        <connector>
            <targetReference>Debug_Screen_Decision</targetReference>
        </connector>
        <flowName>B2B_Checkout_Session</flowName>
        <inputAssignments>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>mainCheckoutSession</assignToReference>
            <name>checkoutSession</name>
        </outputAssignments>
    </subflows>
    <subflows>
        <name>B2B_Refetch_Session</name>
        <label>B2B Refetch Session</label>
        <locationX>1500</locationX>
        <locationY>172</locationY>
        <connector>
            <targetReference>Debug_Screen_Decision</targetReference>
        </connector>
        <flowName>B2B_Checkout_Session</flowName>
        <inputAssignments>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>mainCheckoutSession</assignToReference>
            <name>checkoutSession</name>
        </outputAssignments>
    </subflows>
    <subflows>
        <name>Get_Checkout_Info</name>
        <label>Get Checkout Info</label>
        <locationX>669</locationX>
        <locationY>611</locationY>
        <connector>
            <targetReference>Loop</targetReference>
        </connector>
        <flowName>B2B_Checkout_Get_Checkout_Info</flowName>
        <inputAssignments>
            <name>cart</name>
            <value>
                <elementReference>cart</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>cartItems</name>
            <value>
                <elementReference>cartItems</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>checkoutSessionId</name>
            <value>
                <elementReference>mainCheckoutSession.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>contact</name>
            <value>
                <elementReference>contact</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>contactPointAddresses</name>
            <value>
                <elementReference>contactPointAddresses</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>currentState</name>
            <value>
                <stringValue>Get Cart Info</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>hasCartInfo</name>
            <value>
                <elementReference>hasCartInfo</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>mainCheckoutSession</name>
            <value>
                <elementReference>mainCheckoutSession</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>nextState</name>
            <value>
                <stringValue>One Step Checkout</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>orderDeliveryMethods</name>
            <value>
                <elementReference>orderDeliveryMethods</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>profileName</name>
            <value>
                <elementReference>profileName</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>buyerAccount</assignToReference>
            <name>buyerAccount</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>cart</assignToReference>
            <name>cart</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>cartItems</assignToReference>
            <name>cartItems</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>contact</assignToReference>
            <name>contact</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>contactPointAddresses</assignToReference>
            <name>contactPointAddresses</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>mainCheckoutSession.State</assignToReference>
            <name>currentState</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>hasCartInfo</assignToReference>
            <name>hasCartInfo</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>netTerms</assignToReference>
            <name>netTerms</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>mainCheckoutSession.NextState</assignToReference>
            <name>nextState</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>orderDeliveryMethods</assignToReference>
            <name>orderDeliveryMethods</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>paymentTerm</assignToReference>
            <name>paymentTerm</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>profileName</assignToReference>
            <name>profileName</name>
        </outputAssignments>
    </subflows>
    <variables>
        <name>billingAddress</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>ContactPointAddress</objectType>
    </variables>
    <variables>
        <name>buyerAccount</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>cart</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>WebCart</objectType>
    </variables>
    <variables>
        <name>cartDeliveryGroup</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>CartDeliveryGroup</objectType>
    </variables>
    <variables>
        <name>cartDeliveryGroups</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>CartDeliveryGroup</objectType>
    </variables>
    <variables>
        <name>cartId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>cartItems</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>CartItem</objectType>
    </variables>
    <variables>
        <name>contact</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>contactPointAddresses</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>ContactPointAddress</objectType>
    </variables>
    <variables>
        <name>currentOrder</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Order</objectType>
    </variables>
    <variables>
        <name>currentOrderSummary</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>OrderSummary</objectType>
    </variables>
    <variables>
        <name>debug</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>finalCart</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>WebCart</objectType>
    </variables>
    <variables>
        <name>finalCartItems</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>CartItem</objectType>
    </variables>
    <variables>
        <name>hasCartInfo</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>jobId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>mainCheckoutSession</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>CartCheckoutSession</objectType>
    </variables>
    <variables>
        <name>netTerms</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>CardPaymentMethod</objectType>
    </variables>
    <variables>
        <name>orderDeliveryMethod</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>OrderDeliveryMethod</objectType>
    </variables>
    <variables>
        <name>orderDeliveryMethods</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>OrderDeliveryMethod</objectType>
    </variables>
    <variables>
        <name>orderId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>paymentTerm</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>acCore__PaymentTerms__c</objectType>
    </variables>
    <variables>
        <name>profileName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>shippingAddress</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>ContactPointAddress</objectType>
    </variables>
    <variables>
        <name>shouldCloseCart</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
</Flow>
